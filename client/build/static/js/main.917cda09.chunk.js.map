{"version":3,"sources":["images/hodo.png","utils/Auth.js","components/Routes.jsx","pages/HomePage.jsx","utils/API.js","pages/LoginPage.jsx","pages/LogoutFunction.jsx","pages/SignUpPage.jsx","pages/DashboardPage.jsx","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Auth","token","localStorage","setItem","getItem","removeItem","PrivateRoute","Component","component","rest","render","props","isUserAuthenticated","to","pathname","state","from","location","LoggedOutRoute","PropsRoute","HomePage","this","toggleAuthenticateStatus","React","login","userData","axios","post","signUp","dashboard","get","points","house","put","headers","Authorization","owl","weekreset","logo","require","LoginPage","errors","successMessage","user","username","password","processForm","event","preventDefault","API","then","res","authenticateUser","data","history","push","catch","response","summary","message","setState","changeUser","field","target","name","value","storedMessage","className","src","alt","width","action","onSubmit","htmlFor","type","id","placeholder","aria-describedby","onChange","LogoutFunction","deauthenticateUser","SignUpPage","DashboardPage","Gestalt","Heuristics","Context","getData","handlePointInputChange","handlePointChange","getToken","handleOwl","handleWeekReset","window","confirm","href","onClick","map","item","key","head","weekpoints","aria-label","App","authenticated","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","ReactDom","document","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.917cda09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hodo.e251b13c.png\";","class Auth {\n\n  /**\n   * Authenticate a user. Save a token string in Local Storage\n   *\n   * @param {string} token\n   */\n  static authenticateUser(token) {\n    localStorage.setItem('token', token);\n  }\n\n  /**\n   * Check if a user is authenticated - check if a token is saved in Local Storage\n   *\n   * @returns {boolean}\n   */\n  static isUserAuthenticated() {\n    return localStorage.getItem('token') !== null;\n  }\n\n  /**\n   * Deauthenticate a user. Remove a token from Local Storage.\n   *\n   */\n  static deauthenticateUser() {\n    localStorage.removeItem('token');\n  }\n\n  /**\n   * Get a token value.\n   *\n   * @returns {string}\n   */\n\n  static getToken() {\n    return localStorage.getItem('token');\n  }\n\n}\n\nexport default Auth;\n","import React from 'react';\nimport Auth from '../utils/Auth';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    Auth.isUserAuthenticated() ? (\n      <Component {...props} {...rest} />\n    ) : (\n      <Redirect to={{\n        pathname: '/',\n        state: { from: props.location }\n      }}/>\n    )\n  )}/>\n);\n\nconst LoggedOutRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    Auth.isUserAuthenticated() ? (\n      <Redirect to={{\n        pathname: '/',\n        state: { from: props.location }\n      }}/>\n    ) : (\n      <Component {...props} {...rest} />\n    )\n  )}/>\n);\n\nconst PropsRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    <Component {...props} {...rest} />\n  )}/>\n);\n\nexport { PrivateRoute, LoggedOutRoute, PropsRoute };","import React from 'react';\n\nclass HomePage extends React.Component {\n\n  componentDidMount() {\n    // Update authenticated state on logout\n    this.props.toggleAuthenticateStatus();\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Homepage</p>\n      </div>\n    );\n  }\n};\n\nexport default HomePage;\n","import axios from \"axios\";\n\nexport default {\n  login: userData =>\n    axios.post('/auth/login', userData),\n  signUp: userData =>\n    axios.post('/auth/signup', userData),\n  dashboard: () =>\n    axios.get('/public/points'),\n  points: (house, points, token) =>\n    axios.put('/api/points', { house: house, points: points }, { headers: { Authorization: `bearer ${token}` } }),\n  owl: (house, token) =>\n    axios.put('/api/giveowl', { house: house }, { headers: { Authorization: `bearer ${token}` } }),\n  weekreset: (house, token) =>\n    axios.put('/api/weekreset', { headers: { Authorization: `bearer ${token}` } })\n};\n","import React from 'react';\nimport Auth from '../utils/Auth';\nimport API from '../utils/API';\n\nconst logo = require('../images/hodo.png');\n\nclass LoginPage extends React.Component {\n  state = {\n    errors: {},\n    successMessage: '',\n    user: {\n      username: '',\n      password: ''\n    }\n  }\n\n  componentDidMount() {\n    const storedMessage = localStorage.getItem('successMessage');\n    let successMessage = '';\n\n    if (storedMessage) {\n      successMessage = storedMessage;\n      localStorage.removeItem('successMessage');\n    }\n    this.setState({ successMessage });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      errors: {}\n    });\n  }\n\n  /**\n   * Process the form.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  processForm = event => {\n    // Prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n\n    // Create a string for an HTTP body message\n    const { username, password } = this.state.user;\n\n    API.login({ username, password }).then(res => {\n      // Save the token\n      Auth.authenticateUser(res.data.token);\n\n      // Update authenticated state\n      this.props.toggleAuthenticateStatus();\n\n      // Redirect signed in user to dashboard\n      this.props.history.push('/dashboard');\n    }).catch(({ response }) => {\n      const errors = response.data.errors ? response.data.errors : {};\n      errors.summary = response.data.message;\n\n      this.setState({\n        errors\n      });\n    });\n  }\n\n  /**\n   * Change the user object.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  changeUser = event => {\n    const field = event.target.name;\n    const user = this.state.user;\n    user[field] = event.target.value;\n\n    this.setState({\n      user\n    });\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='row'>\n          <div className='admin-logo'>\n            <img src={logo} alt='Houses of Design Olympics' width='400px' />\n          </div>\n        </div>\n        <div className='row mt-20p'>\n          <div className='col-md-12 col-lg-4'></div>\n          <div className='col-md-12 col-lg-4'>\n            <form action='/' onSubmit={this.processForm}>\n\n              {this.state.successMessage && <p className='text-success'>{this.state.successMessage}</p>}\n\n              <div>\n                <label htmlFor='login-form-username'>Username</label>\n                <input\n                  type='text'\n                  name='username'\n                  className='form-control'\n                  id='login-form-username'\n                  placeholder='Enter username'\n                  aria-describedby='login-usernameHelp'\n                  value={this.state.user.username}\n                  onChange={this.changeUser}\n                />\n                <small id='login-usernameHelp' className='form-text text-danger'>{this.state.errors.username}</small>\n              </div>\n\n              <div className='mt-3'>\n                <label htmlFor='login-form-username'>Password</label>\n                <input\n                  type='password'\n                  name='password'\n                  className='form-control'\n                  id='login-form-password'\n                  placeholder='Enter password'\n                  aria-describedby='login-passwordHelp'\n                  value={this.state.user.password}\n                  onChange={this.changeUser}\n                />\n                <small id='login-passwordHelp' className='form-text text-danger'>{this.state.errors.password}</small>\n              </div>\n\n              <div>\n                <button type='submit' className='btn btn-primary mt-4'>Login</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport Auth from '../utils/Auth';\n\nclass LogoutFunction extends React.Component {\n\n  componentDidMount() {\n    // Deauthenticate user\n    Auth.deauthenticateUser();\n    // Change the current URL to / after logout\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Logging out...</p>\n      </div>\n    );\n  }\n}\n\nexport default LogoutFunction;\n","import React from 'react';\nimport API from '../utils/API';\n\nconst logo = require('../images/hodo.png');\n\nclass SignUpPage extends React.Component {\n  // set the initial component state\n  state = {\n    errors: {},\n    user: {\n      username: '',\n      name: '',\n      password: ''\n    }\n  }\n\n  /**\n   * Process the form.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  processForm = event => {\n    // prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n\n    // create a string for an HTTP body message\n    const { name, username, password } = this.state.user;\n\n    //const formData = `username=${username}&password=${password}`;\n    API.signUp({ name, username, password }).then(res => {\n      // change the component-container state\n      // set a message\n      localStorage.setItem('successMessage', res.data.message);\n\n      // redirect user after sign up to login page\n      this.props.history.push('/login');\n      this.setState({\n        errors: {}\n      });\n\n    }).catch(({ response }) => {\n\n      const errors = response.data.errors ? response.data.errors : {};\n      errors.summary = response.data.message;\n\n      this.setState({\n        errors\n      });\n    });\n  }\n\n  /**\n   * Change the user object.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  changeUser = event => {\n    const field = event.target.name;\n    const user = this.state.user;\n    user[field] = event.target.value;\n\n    this.setState({\n      user\n    });\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='row'>\n          <div className='admin-logo'>\n            <img src={logo} alt='Houses of Design Olympics' width='400px' />\n          </div>\n        </div>\n        <div className='row mt-10p'>\n          <div className='col-md-12 col-lg-4'></div>\n          <div className='col-md-12 col-lg-4'>\n\n            <h2>Admin signup</h2>\n\n            <form action='/' onSubmit={this.processForm}>\n\n              {this.state.errors.summary && <p className='error-message'>{this.state.errors.summary}</p>}\n\n              <div>\n                <label htmlFor='signup-form-name'>Name</label>\n                <input\n                  type='text'\n                  name='name'\n                  className='form-control'\n                  id='signup-form-name'\n                  aria-describedby='signup-nameHelp'\n                  value={this.state.user.name}\n                  onChange={this.changeUser}\n                />\n                <small id='signup-nameHelp' className='form-text text-danger'>{this.state.errors.name}</small>\n              </div>\n\n              <div className='mt-3'>\n                <label htmlFor='signup-form-name'>Username</label>\n                <input\n                  type='text'\n                  name='username'\n                  className='form-control'\n                  id='signup-form-username'\n                  aria-describedby='signup-usernameHelp'\n                  value={this.state.user.username}\n                  onChange={this.changeUser}\n                />\n                <small id='signup-usernameHelp' className='form-text text-danger'>{this.state.errors.username}</small>\n              </div>\n\n              <div className='mt-3'>\n                <label htmlFor='signup-form-password'>Password</label>\n                <input\n                  type='password'\n                  name='password'\n                  className='form-control'\n                  id='signup-form-password'\n                  aria-describedby='signup-passwordHelp'\n                  value={this.state.user.password}\n                  onChange={this.changeUser}\n                />\n                <small id='signup-passwordHelp' className='form-text text-danger'>{this.state.errors.password}</small>\n              </div>\n\n              <div>\n                <button type='submit' className='btn btn-primary mt-4'>Signup</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignUpPage;\n","import React from 'react';\nimport Auth from '../utils/Auth';\nimport API from '../utils/API';\nimport { Link } from 'react-router-dom';\n\nconst logo = require('../images/hodo.png');\n\nclass DashboardPage extends React.Component {\n  state = {\n    data: [],\n    user: {},\n    Gestalt: 0,\n    Heuristics: 0,\n    Context: 0\n  }\n\n  getData = () => {\n    API.dashboard()\n      .then(res => {\n        this.setState({\n          data: res.data\n        });\n      });\n  }\n\n  handlePointInputChange = event => {\n    const house = event.target.name;\n    const value = event.target.value;\n\n    this.setState({\n      [house]: value\n    });\n  }\n\n  handlePointChange = (house, points) => {\n    API.points(house, points, Auth.getToken())\n      .then(res => {\n        this.getData();\n      });\n  }\n\n  handleOwl = house => {\n    API.owl(house, Auth.getToken())\n      .then(res => {\n        this.getData();\n      });\n  }\n\n  handleWeekReset = () => {\n    const confirmation = window.confirm('Are you sure you want to reset the week count for all houses?');\n    \n    if(confirmation) {\n      API.weekreset(Auth.getToken())\n        .then(res => {\n          this.getData();\n        });\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='row admin-nav'>\n          <div className='admin-logo'>\n            <img src={logo} alt='Houses of Design Olympics' width='400px' />\n          </div>\n          <div className='admin-nav-right'>\n            <Link to='/logout' className='admin-nav-right'>Logout</Link>\n            <hr />\n            <a href='#' onClick={this.handleWeekReset}>Reset week</a>\n          </div>\n        </div>\n        <div className='row mt-10p'>\n\n          {this.state.data ? this.state.data.map(item => (\n            <div className='col-12 col-md-4 col-xl-4 mb-5' key={item.house}>\n\n              <div className='card'>\n                <div className='card-body text-center'>\n                  {/* <p><img className='houseImage' height='200' src={item.owl ? `img/${item.owlimage}` : `img/${item.image}`} alt={item.house} /></p> */}\n                  <h5>House of {item.house}</h5>\n                  <h6 className='mb-2 text-muted'>House TA: {item.head}</h6>\n                  <h1><strong>{item.points}</strong></h1>\n                  <p>Points this week: {item.weekpoints}</p>\n\n                  <hr />\n\n                  <div className='input-group'>\n                    <div className='input-group-prepend'>\n                      <button onClick={() => this.handlePointChange(item.house, -1)} className='btn btn-outline-secondary' type='button' id={`admin-minus-${item.house}`}>-1</button>\n                      <button onClick={() => this.handlePointChange(item.house, 1)} className='btn btn-outline-secondary' type='button' id={`admin-plus-${item.house}`}>+1</button>\n                    </div>\n                    <input type='text' onChange={this.handlePointInputChange} name={item.house} className='form-control' placeholder='' aria-label='Number of points to add' value={this.state[item.house]} />\n                    <div className='input-group-append'>\n                      <button onClick={() => this.handlePointChange(item.house, this.state[item.house])} className='btn btn-primary' type='button' id={`admin-add-${item.house}`}>+{this.state[item.house]}</button>\n                    </div>\n                  </div>\n\n                  <hr />\n\n                  <button type='button' onClick={() => this.handleOwl(item.house)} className={item.owl ? 'btn btn-secondary btn-lg btn-block' : 'btn btn-primary btn-lg btn-block'}>{item.owl ? 'Has the owl' : 'Give the owl'}</button>\n                </div>\n              </div>\n\n            </div>\n          )) : ''}\n\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default DashboardPage;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\n\nimport { \n  PrivateRoute, \n  PropsRoute, \n  LoggedOutRoute \n} from './components/Routes';\n\nimport HomePage from './pages/HomePage.jsx';\nimport LoginPage from './pages/LoginPage.jsx';\nimport LogoutFunction from './pages/LogoutFunction.jsx';\nimport SignUpPage from './pages/SignUpPage.jsx';\nimport DashboardPage from './pages/DashboardPage.jsx';\nimport Auth from './utils/Auth';\n\nclass App extends Component {\n\n  state = {\n    authenticated: false\n  }\n\n  componentDidMount() {\n    // Check if user is logged in on refresh\n    this.toggleAuthenticateStatus();\n  }\n\n  toggleAuthenticateStatus = () => {\n    // Check authenticated status and toggle state based on that\n    this.setState({ authenticated: Auth.isUserAuthenticated() });\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n            <PropsRoute exact path=\"/\" component={HomePage} toggleAuthenticateStatus={this.toggleAuthenticateStatus} />\n            <PrivateRoute path=\"/dashboard\" component={DashboardPage}/>\n            <LoggedOutRoute path=\"/login\" component={LoginPage} toggleAuthenticateStatus={this.toggleAuthenticateStatus} />\n            <LoggedOutRoute path=\"/signup\" component={SignUpPage}/>\n            <Route path=\"/logout\" component={LogoutFunction}/>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDom.render(<App />, document.getElementById('react-app'));\nregisterServiceWorker();"],"sourceRoot":""}